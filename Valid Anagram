//This file contains the solution to leetcode 242.Valid Anagram

/*
Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
*/

//Code:

//Python
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        maps,mapt={},{}

        if len(s)!=len(t):
            return False
        
        for i in range(len(s)):
            maps[s[i]] = 1 + maps.get(s[i],0)
            mapt[t[i]] = 1 + mapt.get(t[i],0)
        
        if maps == mapt:
            return True

        return False


//C++
class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size())
        {
            return false;
        }
        unordered_map<char,int> m;
        unordered_map<char,int> n;

        for(int i=0; i<s.size(); i++)
        {
            m[s[i]]++;
            n[t[i]]++;
        }
        for(int j=0; j<m.size(); j++)
        {
            if(m[j]!=n[j])
            {
                return false;
            }
        }
        return true;
    }
};
