This file contains the solution to Leetcode Q.102 Binary tree level order

/*
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).
*/

//Code:

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        vector<vector<int>> result;
        if(root == NULL)
        {
            return {};
        }
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty())
        {
            int len=q.size();
            vector<int> curr;
            for(int i=0; i<len; i++)
            {
                TreeNode* node = q.front();
                q.pop();
                curr.push_back(node->val);
                
                if(node->left != NULL)
                {
                    q.push(node->left);
                }
                if(node->right != NULL)
                {
                    q.push(node->right);
                }
            }
            result.push_back(curr);            
        }
        return result;
        
    }
};
