Q.83 Remove Duplicates from Sorted List

/*
Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.
*/

//Code:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == NULL)
        {
            return NULL;
        }

        ListNode* curr = head;
        ListNode* ahead = head->next;

        while(ahead != NULL)
        {
            if(curr->val == ahead->val)
            {
                ahead = ahead->next;
            }
            else
            {
                curr->next = ahead;
                curr = curr->next;
                ahead = ahead->next;
            }
        }
        curr->next = NULL;
        return head;
    }
};
